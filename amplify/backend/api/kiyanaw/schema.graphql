type Transcription @model
@key(fields: ["id"])
@auth(rules: [{allow: public, provider: iam, ownerField: "author"}])
{
  id: ID!
  author: String!
  coverage: Float
  dateLastUpdated: String!
  userLastUpdated: String
  length: Float
  source: String
  title: String!
  type: String!
}

type Region @model
@key(fields: ["id"])
@key(name: "ByTranscription", fields: ["transcriptionId"], queryField: "byTranscription")
@auth(rules: [{allow: public, provider: iam}])
@versioned
{
  id: String!
  start: Float!
  end: Float!
  text: String!
  translation: String
  dateLastUpdated: String!
  userLastUpdated: String!
  transcriptionId: String!
}

type Cursor @model
@key(fields: ["id", "user"])
@auth(rules: [{allow: public, provider: iam}])
{
  id: String!
  user: String!
  cursor: String!
}

type RegionLock @model 
@key(fields: ["id", "transcriptionId"])
@auth(rules: [{allow: public, provider: iam}])
{
  id: String!
  transcriptionId: String!
  deleteTime: AWSTimestamp!
  user: String!
}